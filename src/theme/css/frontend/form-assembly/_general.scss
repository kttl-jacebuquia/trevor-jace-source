.wForm.wForm {
  @apply font-medium text-px18 leading-px26;

  @screen md {
    @apply leading-px22;
  }

  @screen lg2 {
    @apply text-px20 leading-px24;
  }

  form {
    --max-scaled-label-height-extra: #{rem-calc(10)};
    /* Computed and updated through JS. Refer to form-assembly-form/_index.ts */
    --max-scaled-label-height: #{rem-calc(30)};
    @apply grid grid-cols-1;
    row-gap: 0;

    @screen md {
      @apply grid-cols-2 gap-x-md justify-between items-baseline;
      // row-gap: var(--max-scaled-label-height);
      --max-scaled-label-height: #{rem-calc(58)};
      // Negate the top space brought by the first input groups
      margin-top: calc(-1 * var(--max-scaled-label-height));
    }
  }

  .section {
    @apply grid grid-cols-1 m-0 w-full col-span-full;
    @apply border-b-px1 border-solid border-white pb-px40;
    row-gap: 0;

    @screen md {
      @apply grid-cols-2 gap-x-md justify-between items-baseline;
    }

    > .section:last-child {
      @apply pb-0 border-0;
      margin-bottom: rem-calc(-1);
    }
  }

  // Base label styles
  .label {
    * {
      @apply contents font-normal text-current;
      font-size: inherit;
      font-weight: inherit;
      line-height: inherit;
      letter-spacing: inherit;
    }
  }

  .oneField.oneField {
    @screen md {
      @apply w-full;
    }

    &.offstate {
      @apply hidden;
    }

    &[role="group"] {
      @apply col-span-full;

      > .label {
        @apply ml-0;
      }
    }

    &[data-input-type="checkbox"] {
      input[type="checkbox"] {
        @apply w-px30 h-px30 p-0;
      }

      input[type="checkbox"]:checked {
        background-image: url(/wp-content/themes/trevor/static/media/checkmark.svg);
        background-position: center;
      }
    }

    .oneChoice {
      @apply relative flex items-start mt-px10;

      label {
        @apply pl-px10;
      }
    }

    // Nullifying the extra space brought by --max-scaled-label-height
    // For checkbox/radio since they don't implement scaled labels
    &[data-input-type="checkbox"],
    &[data-input-type="radio"] {
      margin-top: var(--max-scaled-label-height-extra);

      label {
        @apply static px-0 ml-px10 pointer-events-auto h-auto text-white;
        transform: none;
        width: 100% !important;
      }

      @screen md {
        margin-top: calc(var(--max-scaled-label-height) + var(--max-scaled-label-height-extra));
      }
    }

    &[data-input-tag="textarea"] {
      @apply col-span-full;
    }

    &.errFld {
      @apply mb-px30;

      .errMsg {
        @apply absolute py-0 top-full mt-px10 text-orange;
      }

      & input,
      & select,
      & textarea {
        border: 0 !important;

        &:disabled {
          @apply opacity-70;
        }
      }
    }

    // Active label states (General)
    @include active-label-state {
      width: 140%;
    }

    // Active label states (TextArea)
    &[data-input-tag="textarea"] {
      @include active-label-state {
        @screen md {
          width: 132%;
        }
      }
    }
  }

  .inputWrapper.inputWrapper {
    input {
      @apply pl-px28;
    }

    textarea {
      @apply w-full;
    }

    input,
    select,
    textarea {
      &:disabled {
        @apply opacity-70;
      }
    }
  }

  .legend {
    // Detaches legend from the special layout treatment from the fieldset
    // source: https://stackoverflow.com/a/5630621
    @apply relative float-left;
    @apply mt-px30 mb-px20;
    @apply p-0 col-span-full text-white;
    font-size: inherit;
    line-height: inherit;
    letter-spacing: inherit;

    @screen md {
      margin-top: calc(var(--max-scaled-label-height) + var(--max-scaled-label-height-extra));
    }

    div {
      @apply text-current;
    }

    + .oneField.oneField {
      margin-top: calc(var(--active-label-height));

      &[data-input-type="checkbox"],
      &[data-input-type="radio"] {
        margin-top: var(--max-scaled-label-height-extra);
      }

      @screen md {
        &[data-input-type="checkbox"],
        &[data-input-type="radio"] {
          margin-top: 0;
        }
      }
    }
  }

  .actions {
    @apply col-span-full mt-px30;

    @screen md {
      margin-top: calc(var(--max-scaled-label-height) + var(--max-scaled-label-height-extra));
    }
  }

  // Floating Label Input Overrides
  .floating-label-input {
    margin-top: calc(var(--active-label-height) + var(--max-scaled-label-height-extra));

    @screen mobile {
      &[data-input-type="checkbox"],
      &[data-input-type="radio"] {
        margin-top: 0;
      }
    }

    @screen md {
      margin-top: calc(var(--max-scaled-label-height) + var(--max-scaled-label-height-extra));
    }
  }

  // Autocomplete styles
  input:-internal-autofill-selected,
  input:-webkit-autofill,
  input:-webkit-autofill:hover,
  input:-webkit-autofill:focus,
  textarea:-webkit-autofill,
  textarea:-webkit-autofill:hover,
  textarea:-webkit-autofill:focus,
  select:-webkit-autofill,
  select:-webkit-autofill:hover,
  select:-webkit-autofill:focus {
    @apply font-medium;
    box-shadow: inset 0 0 0 100px theme('colors.white.DEFAULT');
    border: 0 !important;
    background-color: theme('colors.white.DEFAULT') !important;
    -webkit-text-fill-color: theme('colors.blue_green.DEFAULT');
  }
}
