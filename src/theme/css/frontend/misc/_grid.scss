// Provides granular grid functionalities
// when built-in grid utilities are not applicable
$column-counts: (
  sm: 6,
  md: 8,
  lg: 12,
  lg2: 12,
  xl: 12,
);

// Computes for column span
@function col-span($span: 1, $screen: sm) {
  $gap: "theme('gap.#{$screen}')";
  $total-columns-count: map-get($column-counts, $screen);
  $total-gaps-count: $total-columns-count - 1;
  $total-gap: "#{$total-gaps-count} * #{$gap}";

  @return calc(((100% - (#{$total-gap})) / #{$total-columns-count}) * #{$span} + (#{$gap} * #{$span - 1}));
}

// Computes for column offset (used for margin/padding)
@function col-offset($span: 1, $screen: sm) {
  $gap: "theme('gap.#{$screen}')";
  $total-columns-count: map-get($column-counts, $screen);
  $total-gaps-count: $total-columns-count - 1;
  $total-gap: "#{$total-gaps-count} * #{$gap}";

  @return calc(((100% - (#{$total-gap})) / #{$total-columns-count}) * #{$span} + (#{$gap} * #{$span - 1}) + #{$gap});
}


@mixin col-span( $span: 1, $screen: sm ) {
  // Apply width
  width: col-span($span, $screen);
}

