// Image settings for Multi-Image variant
// per item, per breakpoint
// ( width, height, top, left, rotate
$multi-image-images-config: (
  // Image 1
  1: (
    rotate: -9.4,
    z-index: 1,
    sm: ( 162, 162, 74, -27 ), // 620
    md: ( 183, 183, 477, -45 ),
    lg2: ( 377, 375, 838, -60 ),
  ),
  // Image 2
  2: (
    rotate: 7.15,
    z-index: 2,
    sm: ( 182, 215, 206, 37 ),
    md: ( 174, 205, 448, 262 ),
    lg2: ( 357, 421, 784, 536 ),
  ),
  // Image 3
  3: (
    rotate: -4.53,
    z-index: 3,
    sm: ( 165, 220, 374, -7 ),
    md: ( 208, 277, 590, 110 ),
    lg2: ( 428, 568, 1065, 257 ),
  ),
  // Image 4
  4: (
    rotate: -4.3,
    z-index: 1,
    sm: ( 219, 238, 97, 182 ),
    md: ( 201, 218, 147, 441 ),
    lg2: ( 390, 425, 296, 900 ),
  ),
  // Image 5
  5: (
    rotate: 0,
    z-index: 2,
    sm: ( 168, 206, 327, 237 ),
    md: ( 264, 323, 249, 529 ),
    lg2: ( 513, 627, 497, 1056 ),
  ),
  // Image 6
  6: (
    rotate: 7.93,
    z-index: 3,
    sm: ( 171, 197, 545, 170 ),
    md: ( 201, 232, 659, 436 ),
    lg2: ( 414, 477, 1217, 920 ),
  ),
);

// There is a need for separate variable to store breakpoint widths
// Since tailwind's theme() function is only evaluated after SASS,
// So we don't have access to theme() values.
$screen-widths: (
  sm: rem-calc(375),
  md: rem-calc(768),
  lg2: rem-calc(1440), // Only using 1440 as reference to compute for ratio
  xl: rem-calc(1440),
);

.header-container {
  &--multi-image {
    @apply pt-0;

    @screen md {
      @apply pt-0;
      margin-top: -$top-nav-height-tablet;
    }

    @screen lg2 {
      @apply pt-0;
      margin-top: -$top-nav-height-desktop;
    }

    @screen xl {
      @apply pt-0 overflow-hidden pb-px500 -mb-px500;
    }

    + main > :first-child {
      @apply pt-px590;

      @screen md {
        @apply pt-px247;
      }

      @screen lg2 {
        @apply pt-px279;
      }
    }
  }

  &__wrap {
    @apply relative pb-px293;

    @screen md {
      @apply pb-px382;
      padding-top: $top-nav-height-tablet;
    }

    @screen lg2 {
      padding-top: $top-nav-height-desktop;
      padding-bottom: rem-calc(680);
    }

    @screen xl {
      @apply pb-px907;
    }
  }
}

.page-header {
  &.type-multi-image {
    @apply pt-px50 relative mt-px136;

    @screen md {
      @apply pt-px22;
    }

    @screen lg2 {
      @apply pt-px95;
    }

    .page-header {
      &-content-wrap {
        @apply tw-grid w-full p-0;
        z-index: 10;

        @screen md {
          @apply p-0;
        }
      }

      &-inner {
        @apply pb-0 md:pb-0 xl:pb-0;
      }

      &-title {
        @apply text-px32 leading-px40 font-bold col-span-full;

        @screen md {
          @apply text-px32 leading-px42 col-span-5;
        }

        @screen lg2 {
          @apply text-px70 leading-px80 col-span-9;
        }

        tilt {
          @apply block font-bold text-px44 leading-px44 tracking-em005 mt-0 rotate-0;

          @screen md {
            @apply leading-px54;
          }

          @screen lg2 {
            @apply text-px98 leading-px108;
          }
        }
      }

      &-desc {
        @apply mt-px10 p-0 col-span-full;
        @apply text-px18 leading-px26 tracking-em005;

        @screen md {
          @apply mt-px10 col-span-4 text-px18 leading-px24;
        }

        @screen lg2 {
          @apply mt-px15 col-span-6 text-px24 leading-px34;
        }
      }

      &-img-wrap {
        @apply relative h-0 -ml-px28 overflow-visible;
        width: calc(100% + #{rem-calc(56)});

        @screen md {
          @apply absolute left-0 -top-px140 ml-0 w-full;
        }

        @screen lg2 {
          @apply w-full -top-px270 ml-0;
        }
      }

      &-images {
        @apply absolute top-0 left-0 right-0 w-full pointer-events-none overflow-hidden;
        height: 200vh;
        min-height: 2160px; // 1080p x 2

        @screen xl {
          @apply overflow-visible;
        }
      }

      &-image {
        @apply block absolute rounded-px10 transform rotate-0;
        @apply w-full h-full object-cover overflow-hidden;

        &::after {
          @apply block;
          content: '';
        }

        @each $index, $image-config in $multi-image-images-config {
          &:nth-child(#{$index}) {
            @each $screen, $config in $image-config {
              $screen-width: map-get($screen-widths, $screen);
              @if ( $screen == rotate ) {
                --tw-rotate: #{$config + "deg"};
              }
              @else if ( $screen == z-index ) {
                z-index: #{$config};
              }
              @else {
                $width: nth($config, 1);
                $height: nth($config, 2);
                $top: nth($config, 3);
                $left: nth($config, 4);

                @if $screen == sm {
                  width: rem-calc($width);
                  height: rem-calc($height);
                  top: rem-calc($top);
                  left: rem-calc($left);
                }
                @else {
                  @screen #{$screen} {
                    $unitless-screen-rem: strip-unit($screen-width);
                    $unitless-width-rem: strip-unit(rem-calc($width));
                    $unitless-height-rem: strip-unit(rem-calc($height));
                    $unitless-left-rem: strip-unit(rem-calc($left));
                    $width-ratio: $unitless-width-rem / $unitless-screen-rem;
                    $height-ratio: $unitless-height-rem / $unitless-width-rem;
                    $left-ratio: $unitless-left-rem / $unitless-screen-rem;
                    // width: rem-calc($width);
                    // height: rem-calc($height);
                    width: percentage($width-ratio);
                    height: auto;
                    top: rem-calc($top);
                    // left: rem-calc($left);
                    left: percentage($left-ratio);

                    &::after {
                      content: '';
                      width: 100%;
                      padding-top: percentage($height-ratio);
                    }
                  }
                }
              }
            }
          }
        }

        img {
          @apply absolute top-0 left-0 w-full h-full object-cover;
        }
      }
    }
  }
}
